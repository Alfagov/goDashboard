package dashboard

import "github.com/Alfagov/goDashboard/models"
import "github.com/Alfagov/goDashboard/pkg/views"

templ header() {
    <!DOCTYPE html>
    <html lang="en"></html>
    <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title>Form Template</title>
        <link href="/internal_static/css/compiled.css" rel="stylesheet"/>
        <script src="/internal_static/js/htmx.js" integrity="sha384-FhXw7b6AlE/jyjlZH5iHa/tTe9EpJ1Y55RjcgPbjeWMskSxZt1v9qkxLJWNJaGni" crossorigin="anonymous"></script>
        <script src="/internal_static/js/hyperscript.js"></script>
        <script src="/internal_static/js/extensions.js"></script>
        <script src="/internal_static/js/chartManager.js"></script>
        <script src="/internal_static/js/echarts.js"></script>
    </head>
}

templ GridListElement(element *models.TreeSpec) {
    <a href={ templ.URL(element.Route) } class="block focus:outline-none">
        <div class="bg-white p-4 rounded shadow transform transition-all duration-300 hover:scale-105 hover:bg-gray-200 hover:shadow-lg active:scale-95">
            <div class="text-xl mb-2">{element.Name}</div>
            <img src={ element.ImageRoute } alt="Placeholder image" class="mb-4 rounded" />
            <p>{element.Description}</p>
        </div>
    </a>
}

templ ListGridPage(elements []*models.TreeSpec) {

    <main class="grid h-full grid-cols-3 gap-6">
        <section class="col-span-3 rounded p-4">
            <div class="grid grid-cols-3 gap-6">
                for _, item := range elements {
                @GridListElement(item)
                }
            </div>
        </section>
    </main>
}


templ IndexPage(name string, dashSvg string, navElements []*models.TreeSpec, body templ.Component, drawerId string) {
    @header()
    <body class="h-screen font-sans flex flex-col">

        @NavBar(name, dashSvg, navElements, drawerId)
        {! body }

    <div id="alert-reference-element"></div>
    </body>
}

templ NavBar(name string, dashSvg string, elements []*models.TreeSpec, drawerId string) {
    <div class="navbar bg-base-200">
        if drawerId != "" {
            <label for={ drawerId } class="btn btn-primary drawer-button">
                @views.MenuSVG()
            </label>
        }
        <div class="flex-1">
            <a class="btn btn-ghost text-xl">{ name }</a>
        </div>
        <div class="flex-none gap-2">
            @navBarMenu(elements)
            <div class="form-control">
                <input type="text" placeholder="Search" class="input input-bordered w-24 md:w-auto" />
            </div>
            @navUserDropdown()
            @navThemeSwitch()
        </div>
    </div>
}

templ navThemeSwitch() {
    <label class="swap swap-rotate">

      <!-- this hidden checkbox controls the state -->
      <input type="checkbox" class="theme-controller" value="light" />

      <!-- sun icon -->
      <svg class="swap-on fill-current w-10 h-10" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z"/></svg>

      <!-- moon icon -->
      <svg class="swap-off fill-current w-10 h-10" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z"/></svg>

    </label>
}

templ navUserDropdown() {
    <div class="dropdown dropdown-end">
        <label tabindex="0" class="avatar btn btn-circle btn-ghost">
            <div class="w-10 rounded-full">
                <img alt="Tailwind CSS Navbar component" src="" />
            </div>
        </label>
        <ul tabindex="0" class="dropdown-content menu menu-sm z-[1] mt-3 w-52 rounded-box bg-base-100 p-2 shadow">
            <li>
            <a class="justify-between">
                Profile
                <span class="badge">New</span>
            </a>
            </li>
            <li><a>Settings</a></li>
            <li><a>Logout</a></li>
        </ul>
    </div>
}

templ navBarMenu(elements []*models.TreeSpec) {
    <ul class="menu menu-horizontal px-1">
        for _, element := range elements {
            @navBarField(element)
        }
    </ul>
}

templ navBarField(element *models.TreeSpec) {
    if len(element.Children) > 0 {
        @MenuDropdown(element)
    } else {
        <li><a href={ templ.URL(element.Route) }>{ element.Name }</a></li>
    }
}

templ MenuDropdown(element *models.TreeSpec) {
    <li>
        <details>
          <summary>{ element.Name }</summary>
          <ul class="bg-base-100 p-2">
            for _, child := range element.Children {
                <li><a href={ templ.URL(child.Route) }>{ child.Name }</a></li>
            }
          </ul>
        </details>
    </li>
}