package templates

import "github.com/Alfagov/goDashboard/models"
import "github.com/Alfagov/goDashboard/layout"

templ NumericWidget(title string, value string, unit string, unitAfter bool, htmx *models.HtmxPoll, widgetLayout *models.WidgetLayout) {
	<div
 		class={ layout.ToCSS(widgetLayout) + "bg-white p-4 rounded-lg shadow-lg" }
 		hx-get={ htmx.Route }
 		hx-trigger={ "every " + htmx.Interval }
 		hx-target={ htmx.Target }
 		hx-swap={ htmx.Swap }
	>
		<p class="text-gray-600">{ title }</p>
		if unitAfter {
			<h2 class="text-3xl font-bold">{ value }{ unit }</h2>
		} else {
			<h2 class="text-3xl font-bold">{ unit }{ value }</h2>
		}
		
	</div>
}

templ GenericForm(formTitle string, fields []templ.Component, checkbox []*models.FormCheckbox, button []*models.FormButton, widgetLayout *models.WidgetLayout, htmx *models.HtmxPoll) {
	<div class={ layout.ToCSS(widgetLayout) + "bg-white p-4 rounded-lg shadow-lg" }>
		<h2 class="text-2xl font-bold mb-4">{ formTitle }</h2>
		<div id="form-error"></div>
		<form hx-post={ htmx.Route } hx-swap="afterbegin" hx-target="#test-id">
			for _, field := range fields {
				{! field }
			}
			for _, chk := range checkbox {
				@FormCheckbox(chk)
			}
			for _, btn := range button {
				@FormButton(btn)
			}
		</form>
	</div>
}

templ FormField(data *models.FormField) {
	<div class="mb-4">
		<label for={ data.Name } class="block text-sm font-medium text-gray-600">{ data.Label }</label>
		<input type={ data.FieldType } id={ data.Name } name={ data.Name } class="mt-1 p-2 w-full border rounded-md"/>
	</div>
}

templ SelectFormField(label string, name string, options []string) {
	<div class="mb-4">
		<label for={ name } class="block text-sm font-medium text-gray-600">{ label }</label>
		<select id={ name } name={ name } class="mt-1 p-2 w-full border rounded-md">
			for _, option := range options {
				<option>{ option }</option>
			}
		</select>
	</div>
}

templ FormButton(data *models.FormButton) {
	<div class="mb-4">
		<button type="submit" class={ "bg-" + data.Color + "-500 text-white p-2 rounded-md" }>{ data.Label }</button>
	</div>
}

templ FormCheckbox(data *models.FormCheckbox) {
	<div class="mb-4">
		<label for={ data.Name } class="block text-sm font-medium text-gray-600">{ data.Label }</label>
		<input type="checkbox" id={ data.Name } name={ data.Name } class="mt-1"/>
	</div>
}

