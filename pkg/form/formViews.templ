package form

import "github.com/Alfagov/goDashboard/models"
import "github.com/Alfagov/goDashboard/pkg/htmx"
import "github.com/Alfagov/goDashboard/pkg/layout"

templ GenericForm(formTitle string, fields []templ.Component, widgetLayout *layout.WidgetLayout, htmx *htmx.Htmx) {
	<div class={ layout.ToCSS(widgetLayout) + "bg-base-200 p-4 rounded-lg shadow-lg" }>
		<h2 class="text-2xl font-bold mb-4">{ formTitle }</h2>
		<div id="form-error"></div>
		<form hx-post={ "/" + htmx.Route.String() } hx-swap="afterbegin" hx-target="#alert-reference-element">
			for _, field := range fields {
				{! field }
			}
		</form>
	</div>
}

templ FormField(data models.Field, baseRoute string) {


		switch data.Type {
		case "submit":
		    <div class="mb-2">
			    <button type="submit" class="btn btn-sm btn-primary">{ data.Label }</button>
			</div>
		case "select":
		    <div class="mb-2">
		        <label for={ data.Name } class="block text-sm font-medium">{ data.Label }</label>
		        <select class="select select-bordered w-full max-w-xs" hx-trigger="load" hx-swap="innerHTML" hx-target="this" hx-get={ "/" + baseRoute + data.Route } id={ data.Name } name={ data.Name }>
                  <option value="">Loading...</option>
                </select>
            </div>
	    case "select-remote":
	        <div class="mb-2">
			    <label for={ data.Name } class="block text-sm font-medium">{ data.Label }</label>
			    <input type={ data.Type } id={ data.Name } hx-trigger="keyup delay:500ms" hx-swap="innerHTML" hx-select={ "#"+data.Name+"options" } hx-target={ "#" + data.Name + "list" } hx-get={ "/" + baseRoute + data.Route } list={ data.Name + "list" } name={ data.Name } class="input input-bordered w-full max-w-xs" />
			    <datalist id={ data.Name + "list" }>
			    </datalist>
			</div>
		case "checkbox":
			<div class="mb-2 flex items-center">
				<label for={ data.Name } class=" block text-sm font-medium">{ data.Label }</label>
				<input type="checkbox" class="checkbox" id={ data.Name } name={ data.Name } value={ data.Name }/>
			</div>
		default:
			<div class="mb-2">
				<label for={ data.Name } class=" block text-sm font-medium">{ data.Label }</label>
				<input type={ data.Type } id={ data.Name } name={ data.Name } class="input input-bordered w-full max-w-xs" />
			</div>

		}
}

templ SelectOptions(options []string, id string) {
	<div id={ id }>
		for _, option := range options {
		<option>{ option }</option>
		}
	</div>
}