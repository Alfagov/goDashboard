package dashboard

import "github.com/Alfagov/goDashboard/models"

templ header() {
    <!DOCTYPE html>
    <html lang="en"></html>
    <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title>Form Template</title>
        <link href="/internal_static/css/compiled.css" rel="stylesheet"/>
        <script src="/internal_static/js/htmx.js" integrity="sha384-FhXw7b6AlE/jyjlZH5iHa/tTe9EpJ1Y55RjcgPbjeWMskSxZt1v9qkxLJWNJaGni" crossorigin="anonymous"></script>
        <script src="/internal_static/js/hyperscript.js"></script>
        <script src="/internal_static/js/extensions.js"></script>
        <script src="/internal_static/js/chartManager.js"></script>
        <script src="/internal_static/js/echarts.js"></script>
    </head>
}

templ GridListElement(element *models.TreeSpec) {
    <a href={ templ.URL(element.Route) } class="block focus:outline-none">
        <div class="bg-white p-4 rounded shadow transform transition-all duration-300 hover:scale-105 hover:bg-gray-200 hover:shadow-lg active:scale-95">
            <div class="text-xl mb-2">{element.Name}</div>
            <img src={ element.ImageRoute } alt="Placeholder image" class="mb-4 rounded" />
            <p>{element.Description}</p>
        </div>
    </a>
}

templ ListGridPage(elements []*models.TreeSpec) {

    <main class="grid h-full grid-cols-3 gap-6">
        <section class="col-span-3 rounded p-4">
            <div class="grid grid-cols-3 gap-6">
                for _, item := range elements {
                @GridListElement(item)
                }
            </div>
        </section>
    </main>
}


templ IndexPage(name string, dashSvg string, navElements []*models.TreeSpec, body templ.Component) {
    @header()
    <body class="bg-gray-100 h-screen font-sans flex flex-col">
    <div class="container mx-auto p-4 h-full">
        @NavbarWidget(name, dashSvg, navElements)
        {! body }
    </div>
    <div id="alert-reference-element"></div>
    </body>
}

templ NavbarWidget(name string, dashSvg string, elements []*models.TreeSpec) {
    <header class="flex h-16 items-center border-b px-4 md:px-6 bg-zinc-100/40">
        <nav class="hidden flex-col gap-6 text-lg font-medium md:flex md:flex-row md:items-center md:gap-5 md:text-sm lg:gap-6">
            <a class="flex items-center gap-2 text-lg font-semibold md:text-base" href="/">
                <img src={ dashSvg } alt="goDashboard" width="24" height="24" style="vertical-align:middle;"></img>
                <span class="">{ name }</span>
            </a>
            for _, element := range elements {
            @navField(element)
            }
        </nav>
        @SerachBox()
    </header>

}

templ navField(element *models.TreeSpec) {

    if len(element.Children) > 0 {
        @Dropdown(element)
    } else {
        <a class="text-black" href={ templ.URL(element.Route) }>{ element.Name }</a>
    }

}

templ Dropdown(element *models.TreeSpec) {
    <div class="dropdown relative">
        <button class="dropdown-btn text-black hover:text-gray-500">{ element.Name }</button>
        <div class="dropdown-menu z-10 hidden origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5">
            <div class="py-1">
                for _, child := range element.Children {
                <a href={ templ.URL(child.Route) } class="block px-4 py-2 hover:bg-gray-100">{ child.Name }</a>
                }
            </div>
        </div>
    </div>
}

templ SerachBox() {
    <div class="ml-auto relative">
        <input
                aria-label="Search"
                class="rounded-lg bg-zinc-100 px-4 py-2 outline-none focus:ring-2 focus:ring-zinc-500 dark:focus:ring-zinc-400"
                placeholder="Search..."
                type="search"
        />
        <div class="absolute right-3 top-3">
            @searchSvg()
        </div>
    </div>
}

templ searchSvg() {
    <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class=" h-6 w-6 text-zinc-500"
    >
        <circle cx="11" cy="11" r="8"></circle>
        <path d="m21 21-4.3-4.3"></path>
    </svg>
}